body {
  background: #000;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", Helvetica,
    Arial, sans-serif;
  color: #f3f5f7;
  height: 100%;
  margin: 0;
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
}

a,
a:visited,
a:active {
  color: #f3f5f7;
  text-decoration: none;
}

.header {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100vw;
  min-height: 100vh;
  padding: 40px 32px 80px;
  justify-content: space-between;
}

.navigation {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  flex: 1;
  margin-bottom: 80px;
}

.logo {
  position: relative;
  padding: 4px;
  top: -4px;
  left: -4px;
}

.logoImage {
  padding-top: 1px;
  width: 38px;
  height: 38px;
}

.intro {
  position: relative;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 32px;
  font-size: 40px;
  letter-spacing: -0.40px;
  line-height: 52px;
  /* text-wrap: balance;
  text-wrap: pretty; */
  font-weight: 500;
}

.intro .staticTxt {
  /* opacity: 0; */
}

.staticTxt span {
  color: rgb(110, 110, 115);
  transition: color 0.5s;
}

.staticTxt span.revealed {
  color: white;
}

.dynamycTxtWrapper {
  position: absolute;
  top: 0;
  left: 0;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 48px;
}

.dynamycTxt {
}

.intro p {
  grid-column: span 3;
  margin: 0;
  padding: 0;
}

.infoCollapsedSidebar {
  display: none;
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100px;
  height: 40px;
  margin: 0;
  border: none;
  cursor: pointer;
  background: #222;
  color: #888;
  border-radius: 50px;
  font-weight: 700;
  font-size: 15px;
  transition: all 0.2s cubic-bezier(0.42, 1.1, 0.6, 1);
}

@media (hover: hover) {
  .button:hover {
    background-color: #333;
  }
}

/* FEATURES SECTION */
.main {
  background-color: rgb(20, 20, 20);
  padding: 80px 32px;
}

.features {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 32px;

  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

@media (hover: hover) {
  .feature .footer a:hover {
    text-decoration: underline;
  }
}

.feature h2 {
  margin: 0 0 24px;
  font-size: 19px;
  line-height: 23px;
  font-weight: 500;
}

.feature .card {
  position: relative;
  width: 100%;
  aspect-ratio: 2046 / 1248;
  background-color: rgba(44,44,45,1);
  border-radius: 12px;
  transition: background-color 0.2s cubic-bezier(0.42, 1.1, 0.6, 1);

  /* Flexbox for alignment */
  display: flex;
  align-items: flex-end; /* Aligns content to the bottom */
  justify-content: flex-start; /* Aligns content to the left */
  padding: 24px; /* Add some spacing from edges */

  font-size: 48px;
  line-height: 48px;
  letter-spacing: -0.48px;
  font-weight: 500;
}

@media (hover: hover) {
  .feature .card:hover {
    background-color: rgba(70, 70, 71, 1);
  }
}

.feature .footer {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 8px;
  padding: 0 40px;
  margin-right: 28px;
  margin-top: 26px;
}

.feature .footer .h3 {
  margin: 0;
  padding: 0;
  font-weight: 600;
  letter-spacing: -0.374px;
  font-size: 17px;
  line-height: 25px;
  margin-bottom: 3px;
  /* white-space: nowrap;     /* Prevent text from wrapping to a new line */
    overflow: hidden;        /* Hide overflowing text */
    text-overflow: ellipsis; */
}

.feature .footer p {
  margin: 0;
  padding: 0;
  font-size: 12px;
  font-weight: 600;
  line-height: 16.000479px;
  letter-spacing: -0.12px;
  color: #9b9b9b;
}

.feature .footer img {
  max-width: 20px;
  margin-top: 3px;
}

@media only screen and (max-width: 1080px) {
  .header {
  padding: 24px 24px 64px;
  }

  .main {
    padding: 64px 24px;
  }

  .features {
    grid-template-columns: repeat(2, 1fr);
    gap: 24px;
  }

  .intro {
    grid-template-columns: repeat(1, 1fr);
  }

  .dynamycTxtWrapper {
    grid-template-columns: repeat(1, 1fr);
  }

  .feature .footer {
    padding: 0 24px;
  }

  .feature .card {
    padding: 20px;
  }
}

@media only screen and (max-width: 680px) {
  .header {
    padding: 16px 16px 48px;
    min-height: auto;
  }

  .logoImage {
    position: relative;
    top: 2px;
    padding-top: 3px;
    width: 34px;
    height: 34px;
  }

  .intro {
    font-size: 28px;
    letter-spacing: -0.28px;
    line-height: 36px;
  }

  .feature .card {
    padding: 24px;
  }

  .main {
    padding: 48px 0;
    overflow-x: hidden;
  }

  .features {
    display: flex; /* Use flexbox for horizontal scrolling */
    overflow-x: auto; /* Enable horizontal scrolling */
    scroll-snap-type: x mandatory; /* Snap to items along the x-axis */
    gap: 16px; /* Add a 16px gap between items */
    width: 100vw; /* Ensure the container takes full viewport width */
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS devices */

    overflow-x: auto; /* Enable horizontal scrolling */
    -ms-overflow-style: none; /* Hide scrollbar in Internet Explorer 10+ */
    scrollbar-width: none; /* Hide scrollbar in Firefox */
  }

  .features::-webkit-scrollbar {
    display: none;
  }

  .feature {
    flex: 0 0 calc(100vw - 16px - 16px); /* Subtract the gutter (16px) and the 32px for the next item visibility */
    scroll-snap-align: start; /* Align to the start for snapping */
    display: flex; /* Ensure the feature item itself is a flex container */
    flex-direction: column; /* Stack children vertically */
    padding-top: 16px;
  }
  .feature:first-of-type {
    padding-left: 16px;
  }
  .feature:last-of-type {
    padding-right: 16px;
  }

  .feature .footer {
    padding: 0 16px;
  }
}

@media only screen and (min-width: 1600px) {
  .logoImage {
    width: 40px;
    height: 40px;
  }

  .intro {
    font-size: 48px;
    letter-spacing: -0.48px;
    line-height: 60px;
  }

  .header {
   padding: 40px 48px 96px;
  }

  .main {
    padding: 96px 48px;
  }

  .feature .footer {
    padding: 0 48px;
  }

  .features {
    gap: 48px;
  }
}

.glitch-container {
  position: relative; /* Ensures container wraps around SVG elements */
  display: inline-block; /* Keeps the width of the container */
}

.glitch {
  position: absolute;
  top: 0;
  left: 0;
}

.glitch-red {
  fill: rgb(255, 0, 0);
  transform: translate(-0, 0);
  mix-blend-mode: screen;
}

.glitch-green {
  fill: rgb(0, 255, 0);
  transform: translate(-0, 0);
  mix-blend-mode: screen;
}

.glitch-blue {
  fill: rgb(0, 0, 255);
  mix-blend-mode: screen; /* Try a different blend mode */
}

.glitch-container:hover .glitch-green {
  transform: translate(-1px, 1px);
}
.glitch-container:hover .glitch-red {
  transform: translate(1px, -1px);
}
